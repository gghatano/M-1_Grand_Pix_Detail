# install.packages('googlesheets4')
library("googlesheets4")
# install.packages('googlesheets4')
library("googlesheets4")
library("dplyr")
read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY")
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY")
dat %>% head
sheet_num = seq(1:18)
sheet_num
paste("シート", sheet_nums)
sheet_nums = seq(1:18)
paste("シート", sheet_nums)
paste("シート", sheet_nums, sep="")
dat %>% head
for(sheet in sheets){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = sheet)
}
sheets = paste("シート", sheet_nums, sep="")
for(sheet in sheets){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = sheet)
}
for(sheet in sheets){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = sheet)
}
}
dat
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = "シート1")
dat
View(dat)
View(dat)
dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
library("tidyr")
dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
sheet_nums = seq(1:2)
dat_all = data.frame(NULL)
for(sheet_num in sheet_nums){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
dat %>% head
dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat_all = rbind(dat_all, dat)
}
dat_all
for(sheet_num in sheet_nums){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
dat %>% head
dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat$contest_num = sheet_num
dat_all = rbind(dat_all, dat)
}
dat_all = data.frame(NULL)
for(sheet_num in sheet_nums){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
dat %>% head
dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat$contest_num = sheet_num
dat_all = rbind(dat_all, dat)
}
dat_all
dat_all = data.frame(NULL)
for(sheet_num in sheet_nums){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
dat %>% head
dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat$contest_num = sheet_num
dat = dat %>% select(contest_num, コンビ名, judge, score)
dat_all = rbind(dat_all, dat)
}
dat_all
dat_all
dat_all %>% tail()
sheet_nums = seq(1:18)
dat_all = data.frame(NULL)
for(sheet_num in sheet_nums){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
dat %>% head
dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat$contest_num = sheet_num
dat = dat %>% select(contest_num, コンビ名, judge, score)
dat_all = rbind(dat_all, dat)
}
dat_all
dat_all %>% write.csv("m1_judge_detail.csv", quote = FALSE, row.names = FALSE)
sheet_nums = seq(1:2)
dat_all = data.frame(NULL)
for(sheet_num in sheet_nums){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
dat %>% head
dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat$contest_num = sheet_num
dat = dat %>% select(contest_num, unit=コンビ名, judge, score)
dat_all = rbind(dat_all, dat)
}
dat_all
dat_all
sheet_nums = seq(1:18)
dat_all = data.frame(NULL)
for(sheet_num in sheet_nums){
dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
dat %>% head
dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
dat$contest_num = sheet_num
dat = dat %>% select(contest_num, unit=コンビ名, judge, score)
dat_all = rbind(dat_all, dat)
}
dat_all
dat_all %>% write.csv("m1_judge_detail.csv", quote = FALSE, row.names = FALSE)
dat_all = read.csv("https://gist.githubusercontent.com/gghatano/092a9f7089451de743f39a53dda24423/raw/b4d8e86381542e5adf802514f7f7d09aa309a6e5/m1_score_detail.csv")
dat_all
dat_all
dat_all = read_csv("https://gist.githubusercontent.com/gghatano/092a9f7089451de743f39a53dda24423/raw/b4d8e86381542e5adf802514f7f7d09aa309a6e5/m1_score_detail.csv")
library("readr")
dat_all = read_csv("https://gist.githubusercontent.com/gghatano/092a9f7089451de743f39a53dda24423/raw/b4d8e86381542e5adf802514f7f7d09aa309a6e5/m1_score_detail.csv")
dat_all
dat_all
dat_all %>% head
library("xtable")
dat_all %>% head() %>% xtable()
dat_all %>% head() %>% xtable("html")
dat_all %>% head() %>% xtable(type = "html")
dat_all %>% head() %>% xtable %>% print(type = "html")
dat_all %>% head() %>% ktable
dat_all %>% head() %>% kable
dat_all %>% head() %>% knitr::kable()
dat_all %>% head
dat_all %>%
group_by(contest_num, unit) %>%
mutate(rank = rank(score)) %>%
head
dat_all %>%
group_by(contest_num, unit, judge) %>%
mutate(rank = rank(score)) %>%
head(30)
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank = rank(score)) %>%
head(30)
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank = rank(score, "max")) %>%
head(30)
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank = rank(score, ties.method = "max")) %>%
head(30)
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank = rank(score, ties.method = "max")) %>%
head(30)
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank = rank(score, ties.method = "max")) %>%
select(-score) %>%
ungroup() -> dat_all_rank
dat_all_rank %>% head()
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank_score = rank(score, ties.method = "max")) %>%
select(-score) %>%
ungroup() -> dat_all_rank
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank_score = rank(score, ties.method = "max")) %>%
select(-score) %>%
ungroup() -> dat_rank
dat_all_rank =
dat_all %>% merge(dat_rank, by = c("contest_num", "unit", "judge"))
dat_all_rank
View(dat_all_rank)
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank_score = rank(-score, ties.method = "max")) %>%
select(-score) %>%
ungroup() -> dat_rank
dat_all_rank =
dat_all %>% merge(dat_rank, by = c("contest_num", "unit", "judge"))
dat_all_rank
View(dat_rank)
View(dat_all_rank)
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank_score = rank(-score, ties.method = "min")) %>%
select(-score) %>%
ungroup() -> dat_rank
dat_all_rank =
dat_all %>% merge(dat_rank, by = c("contest_num", "unit", "judge"))
dat_all_rank
View(dat_rank)
View(dat_all_rank)
dat_all_rank %>%
group_by(contest_num, unit) %>%
summarise(score_sum = sum(score),
rank_sum = sum(rank_score)) %>%
ungroup() -> dat_all_summarized
dat_all_summarized %>% head()
View(dat_all_summarized)
dat_all_rank %>%
group_by(contest_num, unit) %>%
summarise(score_sum = sum(score),
rank_score_sum = sum(rank_score)) %>%
ungroup() -> dat_all_summarized
dat_all_summarized %>% head()
View(dat_all_summarized)
dat_all_summarized %>%
group_by(contest_num) %>%
mutate(normal_rank = rank(score_sum)) %>%
mutate(rank_score_rank = rank(-rank_score_sum)) -> dat_all_summarized
dat_all_summarized %>%
group_by(contest_num) %>%
mutate(normal_rank = rank(score_sum)) %>%
mutate(rank_score_rank = rank(-rank_score_sum)) %>%
ungroup() -> dat_all_summarized
dat_all_summarized
View(dat_all_summarized)
dat_all_summarized %>%
group_by(contest_num) %>%
mutate(normal_rank = rank(score_sum, ties.method = "min")) %>%
mutate(rank_score_rank = rank(-rank_score_sum, ties.method = "min")) %>%
ungroup() -> dat_all_summarized
dat_all_summarized
dat_all_summarized %>%
group_by(contest_num) %>%
mutate(normal_rank = rank(-score_sum, ties.method = "min")) %>%
mutate(rank_score_rank = rank(rank_score_sum, ties.method = "min")) %>%
ungroup() -> dat_all_summarized
dat_all_summarized
## ファイナルラウンド進出者を、2つの点数の両方で抽出する
dat_finalround =
dat_all_summarized %>%
filter((normal_rank <= 3) || (rank_score_rank <= 3))
dat_finalround
## ファイナルラウンド進出者を、2つの点数の両方で抽出する
dat_finalround =
dat_all_summarized %>%
filter((normal_rank <= 3) or (rank_score_rank <= 3))
## ファイナルラウンド進出者を、2つの点数の両方で抽出する
dat_finalround =
dat_all_summarized %>%
filter((normal_rank <= 3) | (rank_score_rank <= 3))
dat_finalround
dat_finalround
## ファイナルラウンド進出者を、2つの点数の両方で抽出する
dat_finalround =
dat_all_summarized %>%
filter((normal_rank <= 3) | (rank_score_rank <= 3))
dat_finalround %>%
filter(contest_num <= 5)
dat_finalround %>%
filter(contest_num <= 3)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num <= 3)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 4 & contest_num <= 6)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 7 & contest_num <= 9)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num <= 3) %>%
arrange(contest_num, normal_rank)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 4 & contest_num <= 6) %>%
arrange(contest_num, normal_rank)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 7 & contest_num <= 9) %>%
arrange(contest_num, normal_rank)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 10 & contest_num <= 12) %>%
arrange(contest_num, normal_rank)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 13 & contest_num <= 15) %>%
arrange(contest_num, normal_rank)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 16 & contest_num <= 18) %>%
arrange(contest_num, normal_rank)
dat_finalround %>% head
dat_finalround %>% head
dat_finalround %>% select(contest_num, unit, normal_rank, rank_score_rank) %>% head
dat_all_rank %>%
filter(judge=="徳井")
dat_all_rank %>%
filter(judge=="徳井") %>%
select(-contest_num)
dat_all_rank %>%
filter(judge=="徳井") %>%
select(-contest_num) %>%
arrange(rank_score)
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 10 & contest_num <= 12) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 16 & contest_num <= 18) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_all_rank %>%
filter(judge=="徳井") %>%
select(-contest_num) %>%
arrange(rank_score) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 13 & contest_num <= 15) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 7 & contest_num <= 9) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>% select(contest_num, unit, normal_rank, rank_score_rank) %>% head %>%
knitr::kable(format="markdown")
dat_all %>% head() %>%
knitr::kable(format="markdown")
# install.packages('googlesheets4')
# library("googlesheets4")
library("dplyr")
library("tidyr")
library("readr")
library("xtable")
dat_all = read_csv("https://gist.githubusercontent.com/gghatano/092a9f7089451de743f39a53dda24423/raw/b4d8e86381542e5adf802514f7f7d09aa309a6e5/m1_score_detail.csv")
dat_all %>% head() %>%
knitr::kable(format="markdown")
## 審査員ごとの順位を算出：「順位点」とする
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank_score = rank(-score, ties.method = "min")) %>%
select(-score) %>%
ungroup() -> dat_rank
## 順位点をマージ
dat_all_rank =
dat_all %>% merge(dat_rank, by = c("contest_num", "unit", "judge"))
## 総合得点と総合順位点を算出
dat_all_rank %>%
group_by(contest_num, unit) %>%
summarise(score_sum = sum(score),
rank_score_sum = sum(rank_score)) %>%
ungroup() -> dat_all_summarized
## 総合得点と総合順位点で、それぞれ順位を算出
dat_all_summarized %>%
group_by(contest_num) %>%
mutate(normal_rank = rank(-score_sum, ties.method = "min")) %>%
mutate(rank_score_rank = rank(rank_score_sum, ties.method = "min")) %>%
ungroup() -> dat_all_summarized
## ファイナルラウンド進出者を、2つの点数の両方で抽出する
dat_finalround =
dat_all_summarized %>%
filter((normal_rank <= 3) | (rank_score_rank <= 3))
dat_finalround %>% select(contest_num, unit, normal_rank, rank_score_rank) %>% head %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num <= 3) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 4 & contest_num <= 6) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 7 & contest_num <= 9) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 10 & contest_num <= 12) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 13 & contest_num <= 15) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 16 & contest_num <= 18) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_all_rank %>%
filter(judge=="徳井") %>%
select(-contest_num) %>%
arrange(rank_score) %>%
knitr::kable(format="markdown")
# install.packages('googlesheets4')
# library("googlesheets4")
library("dplyr")
library("tidyr")
library("readr")
library("xtable")
dat_all = read_csv("https://gist.githubusercontent.com/gghatano/092a9f7089451de743f39a53dda24423/raw/b4d8e86381542e5adf802514f7f7d09aa309a6e5/m1_score_detail.csv")
dat_all %>% head() %>%
knitr::kable(format="markdown")
## 審査員ごとの順位を算出：「順位点」とする
dat_all %>%
group_by(contest_num, judge) %>%
mutate(rank_score = rank(-score, ties.method = "min")) %>%
select(-score) %>%
ungroup() -> dat_rank
## 順位点をマージ
dat_all_rank =
dat_all %>% merge(dat_rank, by = c("contest_num", "unit", "judge"))
## 総合得点と総合順位点を算出
dat_all_rank %>%
group_by(contest_num, unit) %>%
summarise(score_sum = sum(score),
rank_score_sum = sum(rank_score)) %>%
ungroup() -> dat_all_summarized
## 総合得点と総合順位点で、それぞれ順位を算出
dat_all_summarized %>%
group_by(contest_num) %>%
mutate(normal_rank = rank(-score_sum, ties.method = "min")) %>%
mutate(rank_score_rank = rank(rank_score_sum, ties.method = "min")) %>%
ungroup() -> dat_all_summarized
## ファイナルラウンド進出者を、2つの点数の両方で抽出する
dat_finalround =
dat_all_summarized %>%
filter((normal_rank <= 3) | (rank_score_rank <= 3))
dat_finalround %>% select(contest_num, unit, normal_rank, rank_score_rank) %>% head %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num <= 3) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 4 & contest_num <= 6) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 7 & contest_num <= 9) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 10 & contest_num <= 12) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 13 & contest_num <= 15) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_finalround %>%
select(contest_num, unit, normal_rank, rank_score_rank) %>%
filter(contest_num >= 16 & contest_num <= 18) %>%
arrange(contest_num, normal_rank) %>%
knitr::kable(format="markdown")
dat_all_rank %>%
filter(judge=="徳井") %>%
select(-contest_num) %>%
arrange(rank_score) %>%
knitr::kable(format="markdown")
