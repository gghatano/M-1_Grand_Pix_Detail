---
title: "M1データの前処理"
format: html
editor: visual
---

## M1審査の課題

審査員が1人だけ分散が大きな評価をすると、その人の評価点で順位が決まってしまいます。

例えば、出場者が2組で、審査員3名。審査員Aが1組目に90点、2組目に10点、審査員B,C,D,Eが1組目に90点、2組目に91点だった場合を考えます。

| コンビ名 | 合計 | 審査員A | 審査員B | 審査員C | 審査員D | 審査員E |
|:---------|:-----|:--------|:--------|:--------|:--------|:--------|
| コンビX  | 450  | 90      | 90      | 90      | 90      | 90      |
| コンビY  | 374  | 10      | 91      | 91      | 91      | 91      |

5人中4人が2組目を高く評価しているのに、審査員Aが極端な点数の付け方をしているため、総合得点で評価した場合の優勝は1組目になってしまいます。

## 対応案

そこで、点数ではなく、審査員ごとの順位ベースにを集計することで、分散の影響を消すことができます。 先の例だと、審査員Aの点数だと、1組目が1位で2組目が2位。他の4人それぞれ点数だと、1組目が2位で2組目が1位です。順位を利用して総合得点をつけることで、審査員ごとの点数の幅を補正することができます。

| コンビ名 | 順位合計点 | 審査員A順位 | 審査員B順位 | 審査員C順位 | 審査員D順位 | 審査員E順位 |
|:----------|:----------|:----------|:----------|:----------|:----------|:----------|
| コンビX  | 9          | 1           | 2           | 2           | 2           | 2           |
| コンビY  | 6          | 2           | 1           | 1           | 1           | 1           |

順位の数値は低い方が嬉しいことに注意しつつ計算してみると、1組目が9点(=1+2+2+2+2)で2組目が6点(=2+1+1+1+1)となり、2組目が優勝になります。

低い方が嬉しいことがちょっと気持ち悪い場合は、例えば下から何番目か、などの数値を利用すれば、高い方が嬉しくなります。この辺はなんとでもなります。

## 実験

実際に過去のM1グランプリのデータを利用して、総合得点と提案手法とで、ファイナルラウンド進出者(上位3名)の変化を見てみます。 審査員ごとの評価点は[Wikipedia](https://ja.wikipedia.org/wiki/M-1%E3%82%B0%E3%83%A9%E3%83%B3%E3%83%97%E3%83%AA)にありました。これを前処理して、所望のデータを作成します。

## M1データの前処理

[とりあえずspreadsheet](https://docs.google.com/spreadsheets/d/12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY/edit#gid=0)に、生データを配置しました。

集計できるように、(コンテスト番号,コンビ名,審査員,点数)というデータに変形していきます。

### パッケージ読み込み
```{r, echo=TRUE, warning=FALSE, message=FALSE}
# install.packages('googlesheets4')
# library("googlesheets4")
library("dplyr")
library("tidyr")
library("readr")
library("xtable")
```

### 各回データの整形(初回のみ)
```{r, echo=TRUE, eval=FALSE}
## これは実行しない
sheet_nums = seq(1:18)

dat_all = data.frame(NULL)
for(sheet_num in sheet_nums){
  dat = read_sheet(ss="12JcpUWepZ6qqvxiT_-6eswfHO4pbxc_HvThU2P2ztNY", sheet = paste("シート", sheet_num, sep=""))
  dat %>% head
  dat = dat %>% pivot_longer(cols = -コンビ名, names_to = "judge", values_to = "score")
  dat$contest_num = sheet_num
  dat = dat %>% select(contest_num, unit=コンビ名, judge, score)
  dat_all = rbind(dat_all, dat)
}

```

### 審査結果まとめ
既に作成したものを[gistに配置](https://gist.githubusercontent.com/gghatano/092a9f7089451de743f39a53dda24423/raw/b4d8e86381542e5adf802514f7f7d09aa309a6e5/m1_score_detail.csv)しています。
```{r, echo=TRUE, results = "asis"}
dat_all = read_csv("https://gist.githubusercontent.com/gghatano/092a9f7089451de743f39a53dda24423/raw/b4d8e86381542e5adf802514f7f7d09aa309a6e5/m1_score_detail.csv")

dat_all %>% head() %>% knitr::kable()
```

所望の形式のデータができていますね。

## 集計
では、集計していきます。

TODO

## 考察
TODO
## まとめ
TODO